groups:
  - name: justingredients_alerts
    rules:
      # High error rate alert
      - alert: JustIngredientsHighErrorRate
        expr: rate(requests_total{status=~"[5][0-9][0-9]"}[5m]) / rate(requests_total[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
          service: justingredients-bot
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | printf \"%.2f\" }}% (threshold: 5%)"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/high-error-rate.md"

      # OCR failure rate alert
      - alert: JustIngredientsOCRFailures
        expr: rate(ocr_operations_total{result="failure"}[5m]) / rate(ocr_operations_total[5m]) > 0.1
        for: 10m
        labels:
          severity: warning
          service: justingredients-ocr
        annotations:
          summary: "High OCR failure rate"
          description: "OCR failure rate is {{ $value | printf \"%.2f\" }}% (threshold: 10%)"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/ocr-failures.md"

      # Database connection issues
      - alert: JustIngredientsDatabaseDown
        expr: up{job="justingredients"} == 0
        for: 1m
        labels:
          severity: critical
          service: justingredients-db
        annotations:
          summary: "Database connection lost"
          description: "JustIngredients cannot connect to PostgreSQL database"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/database-down.md"

      # High latency alert
      - alert: JustIngredientsHighLatency
        expr: histogram_quantile(0.95, rate(request_duration_seconds_bucket[5m])) > 5.0
        for: 5m
        labels:
          severity: warning
          service: justingredients-bot
        annotations:
          summary: "High request latency detected"
          description: "95th percentile latency is {{ $value | printf \"%.2f\" }}s (threshold: 5s)"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/high-latency.md"

      # Circuit breaker open
      - alert: JustIngredientsCircuitBreakerOpen
        expr: circuit_breaker_state == 1
        for: 2m
        labels:
          severity: warning
          service: justingredients-circuit-breaker
        annotations:
          summary: "Circuit breaker is open"
          description: "OCR circuit breaker has tripped, requests may be failing"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/circuit-breaker-open.md"

      # Health check failures
      - alert: JustIngredientsHealthCheckFailed
        expr: probe_success{job="justingredients-health"} == 0
        for: 1m
        labels:
          severity: critical
          service: justingredients-health
        annotations:
          summary: "Health check failed"
          description: "JustIngredients health check is failing"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/health-check-failed.md"

      # Memory usage alert
      - alert: JustIngredientsHighMemoryUsage
        expr: process_resident_memory_bytes / 1024 / 1024 / 1024 > 2
        for: 10m
        labels:
          severity: warning
          service: justingredients-bot
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value | printf \"%.2f\" }}GB (threshold: 2GB)"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/high-memory-usage.md"

      # OCR processing backlog
      - alert: JustIngredientsOCRBacklog
        expr: ocr_queue_depth > 10
        for: 5m
        labels:
          severity: warning
          service: justingredients-ocr
        annotations:
          summary: "OCR processing backlog"
          description: "OCR queue depth is {{ $value }} (threshold: 10)"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/ocr-backlog.md"

      # Telegram API rate limiting
      - alert: JustIngredientsTelegramRateLimit
        expr: rate(telegram_messages_total[1m]) > 30
        for: 2m
        labels:
          severity: info
          service: justingredients-telegram
        annotations:
          summary: "High Telegram message rate"
          description: "Processing {{ $value | printf \"%.0f\" }} messages/minute - monitor for rate limiting"
          runbook_url: "https://github.com/BasileDuPlessis/JustIngredients/blob/main/docs/runbooks/telegram-rate-limit.md"