name: Advanced Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  security-and-quality:
    name: Security and Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install system dependencies for OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y libleptonica-dev libtesseract-dev pkg-config tesseract-ocr-eng tesseract-ocr-fra tesseract-ocr
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-quality-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-quality-
          ${{ runner.os }}-cargo-
          
    - name: Install cargo-tarpaulin for coverage
      run: cargo install cargo-tarpaulin
      
    - name: Run test coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Install cargo-outdated
      run: cargo install cargo-outdated
      
    - name: Check for outdated dependencies
      run: cargo outdated --exit-code 1
      continue-on-error: true
      
    - name: Install cargo-deny
      run: cargo install cargo-deny
      
    - name: Check licenses and dependencies
      run: cargo deny check
      continue-on-error: true
      
    - name: Run benchmarks (if any)
      run: cargo bench --no-run
      continue-on-error: true