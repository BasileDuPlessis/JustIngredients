name: Automated Code Review

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  code-review:
    name: Code Review
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Install system dependencies for OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y libleptonica-dev libtesseract-dev pkg-config tesseract-ocr-eng tesseract-ocr-fra tesseract-ocr
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check code formatting
      run: cargo fmt --all -- --check
      
    - name: Run Clippy (linting)
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Check code compilation
      run: cargo check --all-targets --all-features
      
    - name: Run tests
      run: cargo test --all-features
      
    - name: Build project
      run: cargo build --release
      
    - name: Check documentation
      run: cargo doc --no-deps --all-features
      
    - name: Security audit
      uses: actions-rs/audit@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}